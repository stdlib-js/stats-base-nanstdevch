// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=Object.defineProperty,t=Object.prototype,n=t.toString,a=t.__defineGetter__,o=t.__defineSetter__,i=t.__lookupGetter__,u=t.__lookupSetter__;var l=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?e:function(r,e,l){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof l||null===l||"[object Array]"===n.call(l))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+l+"`.");if((c="value"in l)&&(i.call(r,e)||u.call(r,e)?(f=r.__proto__,r.__proto__=t,delete r[e],r[e]=l.value,r.__proto__=f):r[e]=l.value),_="get"in l,p="set"in l,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,l.get),p&&o&&o.call(r,e,l.set),r};function f(r,e,t){l(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})}function c(r,e,t,n){var a,o,i,u,l,f,c,_,p;if(r<=0)return NaN;if(1===r||0===n)return(c=t[0])==c&&r-e>0?0:NaN;for(o=n<0?(1-r)*n:0,p=0;p<r;p++){if((c=t[o])==c){a=c;break}o+=n}if(p===r)return NaN;for(o+=n,p+=1,i=0,l=0,_=1;p<r;p++)(c=t[o])==c&&(i+=(f=c-a)*f,l+=f,_+=1),o+=n;return(u=_-e)<=0?NaN:i/u-l/_*(l/u)}f(c,"ndarray",(function(r,e,t,n,a){var o,i,u,l,f,c,_,p,b;if(r<=0)return NaN;if(1===r||0===n)return(_=t[a])==_&&r-e>0?0:NaN;for(i=a,b=0;b<r;b++){if((_=t[i])==_){o=_;break}i+=n}if(b===r)return NaN;for(i+=n,b+=1,u=0,f=0,p=1;b<r;b++)(_=t[i])==_&&(u+=(c=_-o)*c,f+=c,p+=1),i+=n;return(l=p-e)<=0?NaN:u/l-f/p*(f/l)}));const{ndarray:_}=c;var p=Math.sqrt;function b(r,e,t,n){return p(c(r,e,t,n))}function y(r,e,t,n,a){return p(_(r,e,t,n,a))}f(b,"ndarray",y);export{b as default,y as ndarray};
//# sourceMappingURL=mod.js.map
